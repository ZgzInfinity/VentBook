name: docker

services:
  avoris-php84-symfony62:
    container_name: avoris-php84-symfony62
    build:
      context: ./docker
      args:
        UID: $U_ID
    volumes:
      - ./:/appdata/www
    ###> XDEBUG 3 ###
    # Use your client IP here
    # Linux: run "ip a | grep docker0"
    # Windows (with WSL2) and Mac: host.docker.internal
    environment:
      XDEBUG_CLIENT_HOST: 172.17.0.1
      XDEBUG_CLIENT_PORT: 9003
      REDIS_URL: redis://avoris-php84-symfony62-redis:6379
      APP_ENV: dev
      APP_DEBUG: '1'
    ports:
      - '1000:8000'
    networks:
      - avoris-php84-symfony62-network
    depends_on:
      - avoris-php84-symfony62-mysql
      - avoris-php84-symfony62-redis

  avoris-php84-symfony62-mysql:
    container_name: avoris-php84-symfony62-mysql
    image: mysql:8.0.26
    ports:
      - '3336:3306'
    environment:
      MYSQL_DATABASE: mysql_symfony_avoris
      MYSQL_ROOT_PASSWORD: avoris
    volumes:
      - avoris-php84-symfony62-mysql-data:/var/lib/mysql
    networks:
      - avoris-php84-symfony62-network
    command: [ 'mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci' ]

  avoris-php84-symfony62-redis:
    container_name: avoris-php84-symfony62-redis
    image: redis:7.0-alpine
    command: redis-server --appendonly yes --appendfsync everysec --loglevel warning
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    networks:
      - avoris-php84-symfony62-network
  
networks:
  avoris-php84-symfony62-network:
    driver: bridge

volumes:
  avoris-php84-symfony62-mysql-data:

